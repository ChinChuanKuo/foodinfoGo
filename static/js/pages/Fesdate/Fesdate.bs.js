// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as ReactIntl from "react-intl";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Path$BtsCore from "../../features/Path.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Switch$BtsCore from "../../material-ui/core/Switch/Switch.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as MenuItem$BtsCore from "../../material-ui/core/MenuItem/MenuItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as ReasonReactRouter from "reason-react/src/ReasonReactRouter.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as SelectMenu$BtsCore from "../../material-ui/core/Menu/SelectMenu.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as IconGeneral$BtsCore from "../../material-ui/core/IconStyle/IconGeneral.bs.js";
import * as ImageUpload$BtsCore from "../../example/Uploads/ImageUpload.bs.js";
import * as NewFacetube$BtsCore from "../../example/Facebook/NewFacetube.bs.js";
import * as SwitchColor$BtsCore from "../../controls/SwitchColor.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as IconAnimation$BtsCore from "../../controls/IconAnimation.bs.js";
import * as SelectOutline$BtsCore from "../../material-ui/core/Select/SelectOutline.bs.js";
import * as BackgroundBoard$BtsCore from "../../example/Boards/BackgroundBoard.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as TextFieldOutline$BtsCore from "../../material-ui/core/TextField/TextFieldOutline.bs.js";
import * as TextFieldStandard$BtsCore from "../../material-ui/core/TextField/TextFieldStandard.bs.js";
import * as TextFieldMultiline$BtsCore from "../../material-ui/core/TextField/TextFieldMultiline.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowChecked */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: !state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* SettingFormLoad */0 :
          return {
                  formLoad: !state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: action[0],
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormWidth */1 :
          return {
                  formLoad: state.formLoad,
                  formWidth: action[0],
                  formHeight: action[1],
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionPermissItems */2 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormItems */3 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: action[0],
                  desc: action[1],
                  checked: action[2],
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: action[3],
                  items: action[4],
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeFormTitle */4 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: action[0],
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeFormDescription */5 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: action[0],
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickItemTab */6 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: List.mapi((function (i, tabtitem) {
                          return {
                                  showTabt: index === i,
                                  tabImage: tabtitem.tabImage,
                                  tabPath: tabtitem.tabPath
                                };
                        }), state.tabitems),
                  index: index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowFestDrop */7 :
          var index$1 = action[1];
          var droped = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$1 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showFestDrop = droped;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowFestFile */8 :
          var index$2 = action[1];
          var value = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$2 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.festValue = value;
                          newrecord.showFestFile = !item.showFestFile;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeItemFest */9 :
          var index$3 = action[1];
          var value$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$3 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.festValue = value$1;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowFestMenu */10 :
          var index$4 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$4 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showFestMenu = !item.showFestMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickFestMenu */11 :
          var index$5 = action[1];
          var value$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$5 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.showFestMenu = !item.showFestMenu;
                          newrecord.festValue = value$2;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowDateDrop */12 :
          var index$6 = action[1];
          var droped$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$6 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showDateDrop = droped$1;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowDateFile */13 :
          var index$7 = action[1];
          var value$3 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$7 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.dateValue = value$3;
                          newrecord.showDateFile = !item.showDateFile;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeItemDate */14 :
          var index$8 = action[1];
          var value$4 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$8 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.dateValue = value$4;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowDateMenu */15 :
          var index$9 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$9 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showDateMenu = !item.showDateMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickDateMenu */16 :
          var index$10 = action[1];
          var value$5 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$10 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.showDateMenu = !item.showDateMenu;
                          newrecord.dateValue = value$5;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowSttimeDrop */17 :
          var index$11 = action[1];
          var droped$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$11 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showSttimeDrop = droped$2;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowSttimeFile */18 :
          var index$12 = action[1];
          var value$6 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$12 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.sttimeValue = value$6;
                          newrecord.showSttimeFile = !item.showSttimeFile;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeItemSttime */19 :
          var index$13 = action[1];
          var value$7 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$13 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.sttimeValue = value$7;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowSttimeMenu */20 :
          var index$14 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$14 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showSttimeMenu = !item.showSttimeMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickSttimeMenu */21 :
          var index$15 = action[1];
          var value$8 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$15 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.showSttimeMenu = !item.showSttimeMenu;
                          newrecord.sttimeValue = value$8;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowEntimeDrop */22 :
          var index$16 = action[1];
          var droped$3 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$16 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showEntimeDrop = droped$3;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowEntimeFile */23 :
          var index$17 = action[1];
          var value$9 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$17 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.entimeValue = value$9;
                          newrecord.showEntimeFile = !item.showEntimeFile;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ChangeItemEntime */24 :
          var index$18 = action[1];
          var value$10 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$18 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.entimeValue = value$10;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowEntimeMenu */25 :
          var index$19 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$19 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showEntimeMenu = !item.showEntimeMenu;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickEntimeMenu */26 :
          var index$20 = action[1];
          var value$11 = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$20 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.itemModify = true;
                          newrecord.showEntimeMenu = !item.showEntimeMenu;
                          newrecord.entimeValue = value$11;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* MouseEnterLeave */27 :
          var index$21 = action[1];
          var showEnter = action[0];
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: $$Array.mapi((function (i, item) {
                          if (index$21 !== i) {
                            return item;
                          }
                          var newrecord = Caml_obj.caml_obj_dup(item);
                          newrecord.showEnter = showEnter;
                          return newrecord;
                        }), state.items),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */28 :
          return {
                  formLoad: state.formLoad,
                  formWidth: state.formWidth,
                  formHeight: state.formHeight,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  formId: state.formId,
                  tile: state.tile,
                  desc: state.desc,
                  checked: state.checked,
                  tabitems: state.tabitems,
                  index: state.index,
                  heads: state.heads,
                  items: state.items,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_tabitems = /* :: */[
  {
    showTabt: false,
    tabImage: Icons$BtsCore.storeBlack,
    tabPath: Path$BtsCore.storePath
  },
  /* :: */[
    {
      showTabt: false,
      tabImage: Icons$BtsCore.menuBookBlack,
      tabPath: Path$BtsCore.cartePath
    },
    /* :: */[
      {
        showTabt: true,
        tabImage: Icons$BtsCore.todayBlack,
        tabPath: Path$BtsCore.busdatePath
      },
      /* :: */[
        {
          showTabt: false,
          tabImage: Icons$BtsCore.insertInvitationBlack,
          tabPath: Path$BtsCore.fesdatePath
        },
        /* [] */0
      ]
    ]
  ]
];

var initialState_heads = [];

var initialState_items = [];

var initialState = {
  formLoad: false,
  formWidth: 0,
  formHeight: 0,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  formId: "",
  tile: "",
  desc: "",
  checked: false,
  tabitems: initialState_tabitems,
  index: 3,
  heads: initialState_heads,
  items: initialState_items,
  showYoutube: false,
  youtubeText: ""
};

function Fesdate(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var fileRef = React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(28, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(28, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (formId) {
    Axiosapi$BtsCore.Fesdate.search(Data$BtsCore.dFormData(formId, localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(3, [
                        response.data.tile,
                        response.data.desc,
                        response.data.checked,
                        response.data.heads,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(2, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          if (state.formLoad) {
            return (function (param) {
                      console.log("action");
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
          Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  window.innerWidth,
                  window.innerHeight
                ]));
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var handleResize = function ($$event) {
    return Curry._1(dispatch, /* SettingFormWidth */Block.__(1, [
                  $$event.currentTarget.innerWidth,
                  $$event.currentTarget.innerHeight
                ]));
  };
  React.useEffect((function () {
          var watcherId = ReasonReactRouter.watchUrl((function (url) {
                  Curry._1(dispatch, /* SettingFormLoad */Block.__(0, [ReasonReactRouter.dangerouslyGetInitialUrl(undefined).hash]));
                  return Curry._1(dispatch, /* ActionShowProgress */1);
                }));
          window.addEventListener("resize", handleResize, true);
          return (function (param) {
                    ReasonReactRouter.unwatchUrl(watcherId);
                    
                  });
        }), ([]));
  var changeFormTitle = React.useCallback((function (value) {
          return Curry._1(dispatch, /* ChangeFormTitle */Block.__(4, [value]));
        }));
  var changeFormDescription = React.useCallback((function (value) {
          return Curry._1(dispatch, /* ChangeFormDescription */Block.__(5, [value]));
        }));
  var showChecked = React.useCallback((function (param) {
          return Curry._1(dispatch, /* ShowChecked */2);
        }));
  var clickItemTab = React.useCallback((function (i) {
          return (function (tabPath) {
              Curry._1(dispatch, /* ClickItemTab */Block.__(6, [i]));
              return ReasonReactRouter.push(tabPath + ("#" + state.formId));
            });
        }));
  var upFestAJax = function (file, i) {
    var formData = new FormData();
    formData.append("file", file);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowFestFile */Block.__(8, [
                        response.data.file,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                barShowRestoreAction(Status$BtsCore.uploadModels(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dragOverFest = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowFestDrop */Block.__(7, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveFest = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowFestDrop */Block.__(7, [
                            false,
                            i
                          ]));
            });
        }));
  var dropItemFest = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowFestDrop */Block.__(7, [
                      false,
                      i
                    ]));
              return upFestAJax(value, i);
            });
        }));
  var uploadItemFest = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */1);
              return upFestAJax(value, i);
            });
        }));
  var changeItemFest = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeItemFest */Block.__(9, [
                            value,
                            i
                          ]));
            });
        }));
  var showFestMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowFestMenu */Block.__(10, [i]));
        }));
  var clickFestMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickFestMenu */Block.__(11, [
                            value,
                            i
                          ]));
            });
        }));
  var upDateAJax = function (file, i) {
    var formData = new FormData();
    formData.append("file", file);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowDateFile */Block.__(13, [
                        response.data.file,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                barShowRestoreAction(Status$BtsCore.uploadModels(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dragOverDate = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDateDrop */Block.__(12, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveDate = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowDateDrop */Block.__(12, [
                            false,
                            i
                          ]));
            });
        }));
  var dropItemDate = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowDateDrop */Block.__(12, [
                      false,
                      i
                    ]));
              return upDateAJax(value, i);
            });
        }));
  var uploadItemDate = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */1);
              return upDateAJax(value, i);
            });
        }));
  var changeItemDate = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeItemDate */Block.__(14, [
                            value,
                            i
                          ]));
            });
        }));
  var showDateMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowDateMenu */Block.__(15, [i]));
        }));
  var clickDateMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickDateMenu */Block.__(16, [
                            value,
                            i
                          ]));
            });
        }));
  var upSttimeAJax = function (file, i) {
    var formData = new FormData();
    formData.append("file", file);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowSttimeFile */Block.__(18, [
                        response.data.file,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                barShowRestoreAction(Status$BtsCore.uploadModels(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dragOverSttime = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowSttimeDrop */Block.__(17, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveSttime = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowSttimeDrop */Block.__(17, [
                            false,
                            i
                          ]));
            });
        }));
  var dropItemSttime = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowSttimeDrop */Block.__(17, [
                      false,
                      i
                    ]));
              return upSttimeAJax(value, i);
            });
        }));
  var uploadItemSttime = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */1);
              return upSttimeAJax(value, i);
            });
        }));
  var changeItemSttime = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeItemSttime */Block.__(19, [
                            value,
                            i
                          ]));
            });
        }));
  var showSttimeMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowSttimeMenu */Block.__(20, [i]));
        }));
  var clickSttimeMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickSttimeMenu */Block.__(21, [
                            value,
                            i
                          ]));
            });
        }));
  var upEntimeAJax = function (file, i) {
    var formData = new FormData();
    formData.append("file", file);
    Axiosapi$BtsCore.Files.upload(formData).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* ShowEntimeFile */Block.__(23, [
                        response.data.file,
                        i
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              } else {
                barShowRestoreAction(Status$BtsCore.uploadModels(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */1);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var dragOverEntime = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowEntimeDrop */Block.__(22, [
                            true,
                            i
                          ]));
            });
        }));
  var dragLeaveEntime = React.useCallback((function ($$event) {
          return (function (i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              return Curry._1(dispatch, /* ShowEntimeDrop */Block.__(22, [
                            false,
                            i
                          ]));
            });
        }));
  var dropItemEntime = React.useCallback((function ($$event) {
          return (function (value, i) {
              $$event.preventDefault();
              $$event.stopPropagation();
              Curry._1(dispatch, /* ActionShowProgress */1);
              Curry._1(dispatch, /* ShowEntimeDrop */Block.__(22, [
                      false,
                      i
                    ]));
              return upEntimeAJax(value, i);
            });
        }));
  var uploadItemEntime = React.useCallback((function (value) {
          return (function (i) {
              Curry._1(dispatch, /* ActionShowProgress */1);
              return upEntimeAJax(value, i);
            });
        }));
  var changeItemEntime = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ChangeItemEntime */Block.__(24, [
                            value,
                            i
                          ]));
            });
        }));
  var showEntimeMenu = React.useCallback((function (i) {
          return Curry._1(dispatch, /* ShowEntimeMenu */Block.__(25, [i]));
        }));
  var clickEntimeMenu = React.useCallback((function (value) {
          return (function (i) {
              return Curry._1(dispatch, /* ClickEntimeMenu */Block.__(26, [
                            value,
                            i
                          ]));
            });
        }));
  var mouseEnterLeave = React.useCallback((function (enter) {
          return (function (i) {
              return Curry._1(dispatch, /* MouseEnterLeave */Block.__(27, [
                            enter,
                            i
                          ]));
            });
        }));
  var dragStart = React.useCallback((function ($$event) {
          console.log($$event.nativeEvent.currentTarget);
          
        }));
  var chooseFile = React.useCallback((function (param) {
          var el = fileRef.current;
          if (!(el == null)) {
            el.click();
            return ;
          }
          
        }));
  var insertForm = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */1);
          Axiosapi$BtsCore.Fesdate.insert(Data$BtsCore.iFormData(state.formId, state.tile, state.desc, state.items.filter((function (item) {
                              return item.itemModify === true;
                            })), localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      barShowRestoreAction(Status$BtsCore.statusModule("sendSuccess"));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */1);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacetube$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: React.createElement(GridItem$BtsCore.make, {
                        style: Together$BtsCore.marginAuto,
                        top: "0",
                        right: "0",
                        bottom: "0",
                        left: "0",
                        xs: "12",
                        maxWidth: "770px",
                        children: React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: null
                            }, React.createElement(GridItem$BtsCore.make, {
                                  top: "0",
                                  right: "24",
                                  bottom: "0",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "center",
                                        alignItem: "center",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(TextFieldStandard$BtsCore.make, {
                                                  labelColor: "rgba(255,0,0,0.8)",
                                                  enterBorderColor: "rgba(255,0,0,0.8)",
                                                  downBorderColor: "rgba(255,0,0,0.6)",
                                                  borderColor: "rgba(0,0,0,0.2)",
                                                  placeholder: "Project Tile",
                                                  value: state.tile,
                                                  disabled: state.showProgress,
                                                  onChange: (function ($$event) {
                                                      return Curry._1(changeFormTitle, $$event.target.value);
                                                    }),
                                                  children: React.createElement(ReactIntl.FormattedMessage, {
                                                        id: "Together.name",
                                                        defaultMessage: "Name"
                                                      })
                                                })
                                          }), React.createElement(GridItem$BtsCore.make, {
                                            top: "0",
                                            right: "0",
                                            bottom: "0",
                                            left: "0",
                                            xs: "no",
                                            children: React.createElement(Switch$BtsCore.make, {
                                                  checked: state.checked,
                                                  circleColor: SwitchColor$BtsCore.circle(state.checked),
                                                  linearColor: SwitchColor$BtsCore.linear(state.checked),
                                                  fontColor: SwitchColor$BtsCore.font(state.checked),
                                                  disabled: state.showProgress,
                                                  onClick: showChecked,
                                                  children: React.createElement(Typography$BtsCore.make, {
                                                        variant: "subtitle1",
                                                        color: "rgba(255,0,0,1)",
                                                        fontWeight: "bolder",
                                                        children: React.createElement(ReactIntl.FormattedMessage, {
                                                              id: "release",
                                                              defaultMessage: "Release"
                                                            })
                                                      })
                                                })
                                          }))
                                }), React.createElement(GridItem$BtsCore.make, {
                                  top: "0",
                                  right: "24",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(TextFieldStandard$BtsCore.make, {
                                        labelColor: "rgba(255,0,0,0.8)",
                                        enterBorderColor: "rgba(255,0,0,0.8)",
                                        downBorderColor: "rgba(255,0,0,0.6)",
                                        borderColor: "rgba(0,0,0,0.2)",
                                        placeholder: "Project Desc",
                                        value: state.desc,
                                        disabled: state.showProgress,
                                        onChange: (function ($$event) {
                                            return Curry._1(changeFormDescription, $$event.target.value);
                                          }),
                                        children: React.createElement(ReactIntl.FormattedMessage, {
                                              id: "Together.remark",
                                              defaultMessage: "Remark"
                                            })
                                      })
                                }), React.createElement(GridItem$BtsCore.make, {
                                  top: "0",
                                  right: "24",
                                  bottom: "0",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(Tabs$BtsCore.make, {
                                        id: "bus-",
                                        index: state.index,
                                        short: 20,
                                        height: "3",
                                        children: $$Array.of_list(List.mapi((function (i, tabtitem) {
                                                    return React.createElement(Tab$BtsCore.make, {
                                                                showTab: tabtitem.showTabt,
                                                                maxWidth: "111.6",
                                                                borderRadius: "15",
                                                                id: "bus-" + String(i),
                                                                animationName: "none",
                                                                onClick: (function (param) {
                                                                    return Curry._2(clickItemTab, i, tabtitem.tabPath);
                                                                  }),
                                                                children: React.createElement(IconAction$BtsCore.make, {
                                                                      width: "28",
                                                                      height: "28",
                                                                      animation: "leftRight",
                                                                      src: tabtitem.tabImage
                                                                    })
                                                              });
                                                  }), state.tabitems))
                                      })
                                }), React.createElement(GridItem$BtsCore.make, {
                                  style: {
                                    position: "sticky",
                                    top: "0px",
                                    zIndex: "1000"
                                  },
                                  right: "24",
                                  bottom: "0",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "row",
                                        justify: "center",
                                        alignItem: "center",
                                        children: null
                                      }, $$Array.map((function (head) {
                                              return React.createElement(GridItem$BtsCore.make, {
                                                          right: "6",
                                                          bottom: "0",
                                                          left: "6",
                                                          xs: "auto",
                                                          children: head
                                                        });
                                            }), state.heads), React.createElement(GridItem$BtsCore.make, {
                                            style: {
                                              height: "8px"
                                            },
                                            width: "8px",
                                            xs: "no",
                                            children: null
                                          }))
                                }), React.createElement(GridItem$BtsCore.make, {
                                  top: "0",
                                  right: "24",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "column",
                                        justify: "center",
                                        alignItem: "stretch",
                                        children: $$Array.mapi((function (i, item) {
                                                var tmp;
                                                if (item.showFest) {
                                                  var match = item.festOutValue;
                                                  switch (match) {
                                                    case "image" :
                                                        tmp = React.createElement(ImageUpload$BtsCore.make, {
                                                              webLoad: state.showProgress,
                                                              showDrop: item.showFestDrop,
                                                              showFile: item.showFestFile,
                                                              src: item.festValue,
                                                              fileRef: fileRef,
                                                              onDragOver: (function ($$event) {
                                                                  return Curry._2(dragOverFest, $$event, i);
                                                                }),
                                                              onDragLeave: (function ($$event) {
                                                                  return Curry._2(dragLeaveFest, $$event, i);
                                                                }),
                                                              onDrop: (function ($$event) {
                                                                  return Curry._3(dropItemFest, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                }),
                                                              disabled: state.showProgress,
                                                              onClick: chooseFile,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(uploadItemFest, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                })
                                                            });
                                                        break;
                                                    case "label" :
                                                        tmp = React.createElement(Typography$BtsCore.make, {
                                                              variant: "subtitle2",
                                                              style: {
                                                                paddingRight: "6px",
                                                                paddingLeft: "6px"
                                                              },
                                                              noWrap: true,
                                                              children: item.festValue
                                                            });
                                                        break;
                                                    case "text" :
                                                        tmp = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              width: "50",
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.festValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemFest, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textarea" :
                                                        tmp = React.createElement(TextFieldMultiline$BtsCore.make, {
                                                              top: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              rows: 3,
                                                              value: item.festValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemFest, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textline" :
                                                        tmp = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.festValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemFest, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    default:
                                                      tmp = React.createElement(React.Fragment, undefined, React.createElement(SelectOutline$BtsCore.make, {
                                                                top: "0",
                                                                left: "0",
                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                                borderColor: "rgba(0,0,0,0.2)",
                                                                value: item.festValue,
                                                                disabled: state.showProgress,
                                                                onClick: (function (param) {
                                                                    return Curry._1(showFestMenu, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  item.showFestMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                          top: "50%",
                                                                          transform: "translate(0, -50%)",
                                                                          maxHeight: "280",
                                                                          minHeight: "0",
                                                                          topLeft: "12",
                                                                          topRight: "12",
                                                                          bottomRight: "12",
                                                                          bottomLeft: "12",
                                                                          paddingRight: "8",
                                                                          paddingLeft: "8",
                                                                          children: $$Array.map((function (festitem) {
                                                                                  return React.createElement(MenuItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "8",
                                                                                              bottom: "0",
                                                                                              left: "8",
                                                                                              disablePadding: festitem.optionPadding,
                                                                                              topLeft: "12",
                                                                                              topRight: "12",
                                                                                              bottomRight: "12",
                                                                                              bottomLeft: "12",
                                                                                              onClick: (function (param) {
                                                                                                  return Curry._2(clickFestMenu, festitem.value, i);
                                                                                                }),
                                                                                              children: festitem.value
                                                                                            });
                                                                                }), item.festitems)
                                                                        }) : null,
                                                                  React.createElement(IconGeneral$BtsCore.make, {
                                                                        animation: IconAnimation$BtsCore.topDownRorate(item.showFestMenu),
                                                                        src: Icons$BtsCore.arrowDownBlack
                                                                      })
                                                                ]
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: item.showFestMenu,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showFestMenu, i);
                                                                  })
                                                              }));
                                                  }
                                                } else {
                                                  tmp = null;
                                                }
                                                var tmp$1;
                                                if (item.showDate) {
                                                  var match$1 = item.dateOutValue;
                                                  switch (match$1) {
                                                    case "image" :
                                                        tmp$1 = React.createElement(ImageUpload$BtsCore.make, {
                                                              webLoad: state.showProgress,
                                                              showDrop: item.showDateDrop,
                                                              showFile: item.showDateFile,
                                                              src: item.dateValue,
                                                              fileRef: fileRef,
                                                              onDragOver: (function ($$event) {
                                                                  return Curry._2(dragOverDate, $$event, i);
                                                                }),
                                                              onDragLeave: (function ($$event) {
                                                                  return Curry._2(dragLeaveDate, $$event, i);
                                                                }),
                                                              onDrop: (function ($$event) {
                                                                  return Curry._3(dropItemDate, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                }),
                                                              disabled: state.showProgress,
                                                              onClick: chooseFile,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(uploadItemDate, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                })
                                                            });
                                                        break;
                                                    case "label" :
                                                        tmp$1 = React.createElement(Typography$BtsCore.make, {
                                                              variant: "subtitle2",
                                                              style: {
                                                                paddingRight: "6px",
                                                                paddingLeft: "6px"
                                                              },
                                                              noWrap: true,
                                                              children: item.dateValue
                                                            });
                                                        break;
                                                    case "text" :
                                                        tmp$1 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              width: "50",
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.dateValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemDate, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textarea" :
                                                        tmp$1 = React.createElement(TextFieldMultiline$BtsCore.make, {
                                                              top: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              rows: 3,
                                                              value: item.dateValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemDate, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textline" :
                                                        tmp$1 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.dateValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemDate, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    default:
                                                      tmp$1 = React.createElement(React.Fragment, undefined, React.createElement(SelectOutline$BtsCore.make, {
                                                                top: "0",
                                                                left: "0",
                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                                borderColor: "rgba(0,0,0,0.2)",
                                                                value: item.dateValue,
                                                                disabled: state.showProgress,
                                                                onClick: (function (param) {
                                                                    return Curry._1(showDateMenu, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  item.showDateMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                          top: "50%",
                                                                          transform: "translate(0, -50%)",
                                                                          maxHeight: "280",
                                                                          minHeight: "0",
                                                                          topLeft: "12",
                                                                          topRight: "12",
                                                                          bottomRight: "12",
                                                                          bottomLeft: "12",
                                                                          paddingRight: "8",
                                                                          paddingLeft: "8",
                                                                          children: $$Array.map((function (dateitem) {
                                                                                  return React.createElement(MenuItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "8",
                                                                                              bottom: "0",
                                                                                              left: "8",
                                                                                              disablePadding: dateitem.optionPadding,
                                                                                              topLeft: "12",
                                                                                              topRight: "12",
                                                                                              bottomRight: "12",
                                                                                              bottomLeft: "12",
                                                                                              onClick: (function (param) {
                                                                                                  return Curry._2(clickDateMenu, dateitem.value, i);
                                                                                                }),
                                                                                              children: dateitem.value
                                                                                            });
                                                                                }), item.dateitems)
                                                                        }) : null,
                                                                  React.createElement(IconGeneral$BtsCore.make, {
                                                                        animation: IconAnimation$BtsCore.topDownRorate(item.showDateMenu),
                                                                        src: Icons$BtsCore.arrowDownBlack
                                                                      })
                                                                ]
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: item.showDateMenu,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showDateMenu, i);
                                                                  })
                                                              }));
                                                  }
                                                } else {
                                                  tmp$1 = null;
                                                }
                                                var tmp$2;
                                                if (item.showSttime) {
                                                  var match$2 = item.sttimeOutValue;
                                                  switch (match$2) {
                                                    case "image" :
                                                        tmp$2 = React.createElement(ImageUpload$BtsCore.make, {
                                                              webLoad: state.showProgress,
                                                              showDrop: item.showSttimeDrop,
                                                              showFile: item.showSttimeFile,
                                                              src: item.sttimeValue,
                                                              fileRef: fileRef,
                                                              onDragOver: (function ($$event) {
                                                                  return Curry._2(dragOverSttime, $$event, i);
                                                                }),
                                                              onDragLeave: (function ($$event) {
                                                                  return Curry._2(dragLeaveSttime, $$event, i);
                                                                }),
                                                              onDrop: (function ($$event) {
                                                                  return Curry._3(dropItemSttime, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                }),
                                                              disabled: state.showProgress,
                                                              onClick: chooseFile,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(uploadItemSttime, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                })
                                                            });
                                                        break;
                                                    case "label" :
                                                        tmp$2 = React.createElement(Typography$BtsCore.make, {
                                                              variant: "subtitle2",
                                                              style: {
                                                                paddingRight: "6px",
                                                                paddingLeft: "6px"
                                                              },
                                                              noWrap: true,
                                                              children: item.sttimeValue
                                                            });
                                                        break;
                                                    case "text" :
                                                        tmp$2 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              width: "50",
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.sttimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemSttime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textarea" :
                                                        tmp$2 = React.createElement(TextFieldMultiline$BtsCore.make, {
                                                              top: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              rows: 3,
                                                              value: item.sttimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemSttime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textline" :
                                                        tmp$2 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.sttimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemSttime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    default:
                                                      tmp$2 = React.createElement(React.Fragment, undefined, React.createElement(SelectOutline$BtsCore.make, {
                                                                top: "0",
                                                                left: "0",
                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                                borderColor: "rgba(0,0,0,0.2)",
                                                                value: item.sttimeValue,
                                                                disabled: state.showProgress,
                                                                onClick: (function (param) {
                                                                    return Curry._1(showSttimeMenu, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  item.showSttimeMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                          top: "50%",
                                                                          transform: "translate(0, -50%)",
                                                                          maxHeight: "280",
                                                                          minHeight: "0",
                                                                          topLeft: "12",
                                                                          topRight: "12",
                                                                          bottomRight: "12",
                                                                          bottomLeft: "12",
                                                                          paddingRight: "8",
                                                                          paddingLeft: "8",
                                                                          children: $$Array.map((function (fsttimeitem) {
                                                                                  return React.createElement(MenuItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "8",
                                                                                              bottom: "0",
                                                                                              left: "8",
                                                                                              disablePadding: fsttimeitem.optionPadding,
                                                                                              topLeft: "12",
                                                                                              topRight: "12",
                                                                                              bottomRight: "12",
                                                                                              bottomLeft: "12",
                                                                                              onClick: (function (param) {
                                                                                                  return Curry._2(clickSttimeMenu, fsttimeitem.value, i);
                                                                                                }),
                                                                                              children: fsttimeitem.value
                                                                                            });
                                                                                }), item.sttimeitems)
                                                                        }) : null,
                                                                  React.createElement(IconGeneral$BtsCore.make, {
                                                                        animation: IconAnimation$BtsCore.topDownRorate(item.showSttimeMenu),
                                                                        src: Icons$BtsCore.arrowDownBlack
                                                                      })
                                                                ]
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: item.showSttimeMenu,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showSttimeMenu, i);
                                                                  })
                                                              }));
                                                  }
                                                } else {
                                                  tmp$2 = null;
                                                }
                                                var tmp$3;
                                                if (item.showEntime) {
                                                  var match$3 = item.entimeOutValue;
                                                  switch (match$3) {
                                                    case "image" :
                                                        tmp$3 = React.createElement(ImageUpload$BtsCore.make, {
                                                              webLoad: state.showProgress,
                                                              showDrop: item.showEntimeDrop,
                                                              showFile: item.showEntimeFile,
                                                              src: item.sttimeValue,
                                                              fileRef: fileRef,
                                                              onDragOver: (function ($$event) {
                                                                  return Curry._2(dragOverEntime, $$event, i);
                                                                }),
                                                              onDragLeave: (function ($$event) {
                                                                  return Curry._2(dragLeaveEntime, $$event, i);
                                                                }),
                                                              onDrop: (function ($$event) {
                                                                  return Curry._3(dropItemEntime, $$event, Caml_array.caml_array_get($$event.nativeEvent.dataTransfer.files, 0), i);
                                                                }),
                                                              disabled: state.showProgress,
                                                              onClick: chooseFile,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(uploadItemEntime, Caml_array.caml_array_get($$event.target.files, 0), i);
                                                                })
                                                            });
                                                        break;
                                                    case "label" :
                                                        tmp$3 = React.createElement(Typography$BtsCore.make, {
                                                              variant: "subtitle2",
                                                              style: {
                                                                paddingRight: "6px",
                                                                paddingLeft: "6px"
                                                              },
                                                              noWrap: true,
                                                              children: item.entimeValue
                                                            });
                                                        break;
                                                    case "text" :
                                                        tmp$3 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              width: "50",
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.entimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemEntime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textarea" :
                                                        tmp$3 = React.createElement(TextFieldMultiline$BtsCore.make, {
                                                              top: "0",
                                                              bottom: "0",
                                                              left: "0",
                                                              labelColor: "rgba(255,0,0,0.8)",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              rows: 3,
                                                              value: item.entimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemEntime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    case "textline" :
                                                        tmp$3 = React.createElement(TextFieldOutline$BtsCore.make, {
                                                              top: "0",
                                                              left: "0",
                                                              borderTop: "10",
                                                              borderBottom: "10",
                                                              enterBorderColor: "rgba(255,0,0,0.8)",
                                                              downBorderColor: "rgba(255,0,0,0.6)",
                                                              borderColor: "rgba(0,0,0,0.2)",
                                                              value: item.entimeValue,
                                                              disabled: state.showProgress,
                                                              onChange: (function ($$event) {
                                                                  return Curry._2(changeItemEntime, $$event.target.value, i);
                                                                }),
                                                              children: null
                                                            });
                                                        break;
                                                    default:
                                                      tmp$3 = React.createElement(React.Fragment, undefined, React.createElement(SelectOutline$BtsCore.make, {
                                                                top: "0",
                                                                left: "0",
                                                                enterBorderColor: "rgba(255,0,0,0.8)",
                                                                downBorderColor: "rgba(255,0,0,0.6)",
                                                                borderColor: "rgba(0,0,0,0.2)",
                                                                value: item.entimeValue,
                                                                disabled: state.showProgress,
                                                                onClick: (function (param) {
                                                                    return Curry._1(showEntimeMenu, i);
                                                                  }),
                                                                children: /* tuple */[
                                                                  item.showEntimeMenu ? React.createElement(SelectMenu$BtsCore.make, {
                                                                          top: "50%",
                                                                          transform: "translate(0, -50%)",
                                                                          maxHeight: "280",
                                                                          minHeight: "0",
                                                                          topLeft: "12",
                                                                          topRight: "12",
                                                                          bottomRight: "12",
                                                                          bottomLeft: "12",
                                                                          paddingRight: "8",
                                                                          paddingLeft: "8",
                                                                          children: $$Array.map((function (fentimeitem) {
                                                                                  return React.createElement(MenuItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "8",
                                                                                              bottom: "0",
                                                                                              left: "8",
                                                                                              disablePadding: fentimeitem.optionPadding,
                                                                                              topLeft: "12",
                                                                                              topRight: "12",
                                                                                              bottomRight: "12",
                                                                                              bottomLeft: "12",
                                                                                              onClick: (function (param) {
                                                                                                  return Curry._2(clickEntimeMenu, fentimeitem.value, i);
                                                                                                }),
                                                                                              children: fentimeitem.value
                                                                                            });
                                                                                }), item.entimeitems)
                                                                        }) : null,
                                                                  React.createElement(IconGeneral$BtsCore.make, {
                                                                        animation: IconAnimation$BtsCore.topDownRorate(item.showEntimeMenu),
                                                                        src: Icons$BtsCore.arrowDownBlack
                                                                      })
                                                                ]
                                                              }), React.createElement(BackgroundBoard$BtsCore.make, {
                                                                showBackground: item.showEntimeMenu,
                                                                backgroundColor: "transparent",
                                                                onClick: (function (param) {
                                                                    return Curry._1(showEntimeMenu, i);
                                                                  })
                                                              }));
                                                  }
                                                } else {
                                                  tmp$3 = null;
                                                }
                                                return React.createElement(GridItem$BtsCore.make, {
                                                            right: "0",
                                                            left: "0",
                                                            xs: "auto",
                                                            onMouseEnter: (function (param) {
                                                                return Curry._2(mouseEnterLeave, true, i);
                                                              }),
                                                            onMouseLeave: (function (param) {
                                                                return Curry._2(mouseEnterLeave, false, i);
                                                              }),
                                                            children: React.createElement("div", {
                                                                  onDragStart: Curry.__1(dragStart)
                                                                }, React.createElement(GridContainer$BtsCore.make, {
                                                                      direction: "row",
                                                                      justify: "start",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: tmp
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: tmp$1
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: tmp$2
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: tmp$3
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          style: {
                                                                            height: "32px"
                                                                          },
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          width: "32px",
                                                                          xs: "no",
                                                                          children: item.showEnter ? React.createElement(IconButton$BtsCore.make, {
                                                                                  enterBackgroundColor: "transparent",
                                                                                  downBackgroundColor: "transparent",
                                                                                  padding: "4",
                                                                                  disabled: state.showProgress,
                                                                                  children: React.createElement(IconAction$BtsCore.make, {
                                                                                        animation: "leftRight",
                                                                                        src: Icons$BtsCore.createBlack
                                                                                      })
                                                                                }) : null
                                                                        })))
                                                          });
                                              }), state.items)
                                      })
                                }), React.createElement(GridItem$BtsCore.make, {
                                  right: "24",
                                  left: "24",
                                  xs: "auto",
                                  children: React.createElement(Button$BtsCore.make, {
                                        enterBackgroundColor: "rgba(255,0,0,0.6)",
                                        backgroundColor: "rgba(255,0,0,0.8)",
                                        width: "100%",
                                        size: "large",
                                        disabled: state.showProgress,
                                        onClick: insertForm,
                                        children: React.createElement(ReactIntl.FormattedMessage, {
                                              id: "save",
                                              defaultMessage: "Save"
                                            })
                                      })
                                }))
                      })
                }), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Fesdate;

export {
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */

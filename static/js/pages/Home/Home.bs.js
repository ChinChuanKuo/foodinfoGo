// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as ReactIntl from "react-intl";
import * as Tab$BtsCore from "../../material-ui/core/Tabs/Tab.bs.js";
import * as Data$BtsCore from "../../features/Data.bs.js";
import * as Tabs$BtsCore from "../../material-ui/core/Tabs/Tabs.bs.js";
import * as Icons$BtsCore from "../../material-ui/icon/Icons.bs.js";
import * as Image$BtsCore from "../../example/Medias/Image.bs.js";
import * as Avatar$BtsCore from "../../material-ui/core/Avatar/Avatar.bs.js";
import * as Button$BtsCore from "../../material-ui/core/Button/Button.bs.js";
import * as Status$BtsCore from "../../features/Status.bs.js";
import * as Divider$BtsCore from "../../material-ui/core/Divider/Divider.bs.js";
import * as Tooltip$BtsCore from "../../material-ui/core/Tooltip/Tooltip.bs.js";
import * as Axiosapi$BtsCore from "../../features/Axiosapi.bs.js";
import * as GridItem$BtsCore from "../../material-ui/core/Grid/GridItem.bs.js";
import * as Together$BtsCore from "../../styles/Together/Together.bs.js";
import * as DialogFull$BtsCore from "../../material-ui/core/Dialog/DialogFull.bs.js";
import * as IconAction$BtsCore from "../../material-ui/core/IconStyle/IconAction.bs.js";
import * as IconButton$BtsCore from "../../material-ui/core/IconButton/IconButton.bs.js";
import * as Typography$BtsCore from "../../material-ui/core/Typography/Typography.bs.js";
import * as DialogTitle$BtsCore from "../../material-ui/core/Dialog/DialogTitle.bs.js";
import * as NewFacebook$BtsCore from "../../example/Facebook/NewFacebook.bs.js";
import * as BottomScroll$BtsCore from "../../example/ScrollBar/BottomScroll.bs.js";
import * as DialogActions$BtsCore from "../../material-ui/core/Dialog/DialogActions.bs.js";
import * as DialogContent$BtsCore from "../../material-ui/core/Dialog/DialogContent.bs.js";
import * as GridContainer$BtsCore from "../../material-ui/core/Grid/GridContainer.bs.js";
import * as SnackbarYoutube$BtsCore from "../../material-ui/core/Snackbar/SnackbarYoutube.bs.js";
import * as DialogContentText$BtsCore from "../../material-ui/core/Dialog/DialogContentText.bs.js";

((require('../../../scss/pages/Together/together.scss')));

function reducer(state, action) {
  if (typeof action === "number") {
    switch (action) {
      case /* SettingError */0 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: !state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormLoad */1 :
          return {
                  formLoad: !state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionShowProgress */2 :
          return {
                  formLoad: state.formLoad,
                  showProgress: !state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* CloseAnimationFull */3 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: !state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      
    }
  } else {
    switch (action.tag | 0) {
      case /* ActionPermissItems */0 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: action[0],
                  update: action[1],
                  delete: action[2],
                  export: action[3],
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormPolls */1 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: action[0],
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFormItems */2 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: action[0],
                  items: action[1],
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingScrollItems */3 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: action[0],
                  items: $$Array.append(state.items, action[1]),
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* MouseFormItem */4 :
          var index = action[0];
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: $$Array.mapi((function (i, item) {
                          return {
                                  id: item.id,
                                  tile: item.tile,
                                  desc: item.desc,
                                  distance: item.distance,
                                  arrival: item.arrival,
                                  enter: index === i
                                };
                        }), state.items),
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* SettingFullPolls */5 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: action[0],
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ShowAnimationFull */6 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: !state.showFull,
                  formId: action[0],
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: action[1],
                  formDesc: action[2],
                  formitems: action[3],
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ClickItemTab */7 :
          var index$1 = action[0];
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: List.mapi((function (i, tabitem) {
                          return {
                                  showTab: index$1 === i,
                                  tabImage: tabitem.tabImage
                                };
                        }), state.tabitems),
                  index: index$1,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* MouseChatItem */8 :
          var index$2 = action[0];
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: $$Array.mapi((function (i, chatitem) {
                          return {
                                  id: chatitem.id,
                                  fstName: chatitem.fstName,
                                  content: chatitem.content,
                                  datetime: chatitem.datetime,
                                  name: chatitem.name,
                                  showDelete: chatitem.showDelete,
                                  showEnter: index$2 === i
                                };
                        }), state.chatitems),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* AddChatItems */9 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: $$Array.append(state.chatitems, action[0]),
                  showYoutube: state.showYoutube,
                  youtubeText: state.youtubeText
                };
      case /* ActionSnackBar */10 :
          return {
                  formLoad: state.formLoad,
                  showProgress: state.showProgress,
                  error: state.error,
                  insert: state.insert,
                  update: state.update,
                  delete: state.delete,
                  export: state.export,
                  showItem: state.showItem,
                  items: state.items,
                  showFull: state.showFull,
                  formId: state.formId,
                  tabitems: state.tabitems,
                  index: state.index,
                  formTile: state.formTile,
                  formDesc: state.formDesc,
                  formitems: state.formitems,
                  chatitems: state.chatitems,
                  showYoutube: action[1],
                  youtubeText: action[0]
                };
      
    }
  }
}

var initialState_items = [];

var initialState_tabitems = /* :: */[
  {
    showTab: true,
    tabImage: Icons$BtsCore.storeBlack
  },
  /* :: */[
    {
      showTab: false,
      tabImage: Icons$BtsCore.menuBookBlack
    },
    /* :: */[
      {
        showTab: false,
        tabImage: Icons$BtsCore.mapBlack
      },
      /* [] */0
    ]
  ]
];

var initialState_formitems = [];

var initialState_chatitems = [];

var initialState = {
  formLoad: false,
  showProgress: true,
  error: false,
  insert: false,
  update: false,
  delete: false,
  export: false,
  showItem: false,
  items: initialState_items,
  showFull: false,
  formId: "",
  tabitems: initialState_tabitems,
  index: 0,
  formTile: "",
  formDesc: "",
  formitems: initialState_formitems,
  chatitems: initialState_chatitems,
  showYoutube: false,
  youtubeText: ""
};

function Home(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  React.useRef(null);
  var barShowRestoreAction = function (youtubeText) {
    Curry._1(dispatch, /* ActionSnackBar */Block.__(10, [
            youtubeText,
            true
          ]));
    setTimeout((function (param) {
            return Curry._1(dispatch, /* ActionSnackBar */Block.__(10, [
                          "",
                          false
                        ]));
          }), 5000);
    
  };
  var searchAJax = function (param) {
    Axiosapi$BtsCore.Default.search(Data$BtsCore.sLocalData(localStorage.getItem("longitude"), localStorage.getItem("latitude"), state.items.length, localStorage.getItem("newid"))).then((function (response) {
              var match = response.data.status;
              var tmp;
              if (match === "istrue") {
                Curry._1(dispatch, /* SettingFormItems */Block.__(2, [
                        response.data.showItem,
                        response.data.items
                      ]));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              } else {
                Curry._1(dispatch, /* SettingError */0);
                barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                tmp = Curry._1(dispatch, /* ActionShowProgress */2);
              }
              return Promise.resolve(tmp);
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  var permissAJax = function (param) {
    Axiosapi$BtsCore.Form.permiss(Data$BtsCore.userData(localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* ActionPermissItems */Block.__(0, [
                                  response.data.insert,
                                  response.data.update,
                                  response.data.delete,
                                  response.data.export
                                ])), searchAJax(undefined)));
            })).catch((function (error) {
            return Promise.resolve((console.log(error), undefined));
          }));
    
  };
  React.useEffect((function () {
          var match = state.formLoad;
          var match$1 = state.showFull;
          if (match) {
            if (match$1) {
              return (function (param) {
                        console.log("action");
                        
                      });
            }
            var inteId = setTimeout((function (param) {
                    Axiosapi$BtsCore.Default.polling(Data$BtsCore.sLocalData(localStorage.getItem("longitude"), localStorage.getItem("latitude"), state.items.length, localStorage.getItem("newid"))).then((function (response) {
                              return Promise.resolve(Curry._1(dispatch, /* SettingFormPolls */Block.__(1, [response.data.items])));
                            })).catch((function (error) {
                            return Promise.resolve((console.log(error), undefined));
                          }));
                    
                  }), 3000);
            return (function (param) {
                      clearTimeout(inteId);
                      
                    });
          }
          Curry._1(dispatch, /* SettingFormLoad */1);
          var timeId = permissAJax(undefined);
          return (function (param) {
                    return timeId;
                  });
        }));
  var scrollBar = React.useCallback((function (param) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          var length = state.items.length;
          Axiosapi$BtsCore.Default.scroll(Data$BtsCore.sLocalData(localStorage.getItem("longitude"), localStorage.getItem("latitude"), length, localStorage.getItem("newid"))).then((function (response) {
                    return Promise.resolve((Curry._1(dispatch, /* SettingScrollItems */Block.__(3, [
                                        response.data.showItem,
                                        response.data.items
                                      ])), Curry._1(dispatch, /* ActionShowProgress */2)));
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var mouseFormItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* MouseFormItem */Block.__(4, [i]));
        }));
  var pingItemFunc = function (length,count){ if (state.index == 0) { pingItemAJax(length + count); } };
  var pingItemEror = function (length){ if (state.index == 0) { setTimeout(() => pingItemAJax(length), 15000); } };
  var pingItemAJax = function (length) {
    Axiosapi$BtsCore.Default.pingItem(Data$BtsCore.sPChatData(state.formId, length, localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* SettingFullPolls */Block.__(5, [response.data.items])), pingItemFunc(length, response.data.items.length)));
            })).catch((function (param) {
            return Promise.resolve(pingItemEror(length));
          }));
    
  };
  var clickFormBoard = React.useCallback((function (id) {
          Curry._1(dispatch, /* ActionShowProgress */2);
          Axiosapi$BtsCore.Default.sItem(Data$BtsCore.dFormData(id, localStorage.getItem("newid"))).then((function (response) {
                    var match = response.data.status;
                    var tmp;
                    if (match === "istrue") {
                      Curry._1(dispatch, /* ShowAnimationFull */Block.__(6, [
                              response.data.formId,
                              response.data.tile,
                              response.data.desc,
                              response.data.items
                            ]));
                      Curry._1(dispatch, /* ActionShowProgress */2);
                      tmp = pingItemAJax(response.data.items.length);
                    } else {
                      barShowRestoreAction(Status$BtsCore.statusModule(response.data.status));
                      tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                    }
                    return Promise.resolve(tmp);
                  })).catch((function (error) {
                  return Promise.resolve((console.log(error), undefined));
                }));
          
        }));
  var pingChatFunc = function (length,count){ if (state.index == 1) { pingChatAJax(length + count); } };
  var pingChatEror = function (length){ if (state.index == 1) { setTimeout(() => pingChatAJax(length), 15000); } };
  var pingChatAJax = function (length) {
    Axiosapi$BtsCore.Default.pingChat(Data$BtsCore.sPChatData(state.formId, length, localStorage.getItem("newid"))).then((function (response) {
              return Promise.resolve((Curry._1(dispatch, /* AddChatItems */Block.__(9, [response.data.items])), pingChatFunc(length, response.data.items.length)));
            })).catch((function (param) {
            return Promise.resolve(pingChatEror(length));
          }));
    
  };
  var clickItemTab = React.useCallback((function (i) {
          Curry._1(dispatch, /* ClickItemTab */Block.__(7, [i]));
          if (i === 1) {
            Curry._1(dispatch, /* ActionShowProgress */2);
            Axiosapi$BtsCore.Default.sChat(Data$BtsCore.sPChatData(state.formId, state.chatitems.length, localStorage.getItem("newid"))).then((function (response) {
                      var match = response.data.status;
                      var tmp;
                      if (match === "istrue") {
                        Curry._1(dispatch, /* AddChatItems */Block.__(9, [response.data.items]));
                        Curry._1(dispatch, /* ActionShowProgress */2);
                        tmp = pingChatAJax(response.data.items.length);
                      } else {
                        tmp = Curry._1(dispatch, /* ActionShowProgress */2);
                      }
                      return Promise.resolve(tmp);
                    })).catch((function (error) {
                    return Promise.resolve((console.log(error), undefined));
                  }));
            return ;
          }
          
        }));
  var mouseChatItem = React.useCallback((function (i) {
          return Curry._1(dispatch, /* MouseChatItem */Block.__(8, [i]));
        }));
  var closeAnimationFull = React.useCallback((function (param) {
          return Curry._1(dispatch, /* CloseAnimationFull */3);
        }));
  var match$1 = state.index;
  return React.createElement(React.Fragment, undefined, React.createElement(NewFacebook$BtsCore.make, {
                  showProgress: state.showProgress,
                  error: state.error,
                  children: /* tuple */[
                    React.createElement(GridItem$BtsCore.make, {
                          style: Together$BtsCore.marginAuto,
                          top: "0",
                          right: "32",
                          bottom: "0",
                          left: "32",
                          xs: "12",
                          maxWidth: "770px",
                          children: null
                        }, React.createElement(GridContainer$BtsCore.make, {
                              direction: "column",
                              justify: "center",
                              alignItem: "stretch",
                              children: $$Array.mapi((function (i, item) {
                                      return React.createElement("div", {
                                                  onClick: (function (param) {
                                                      return Curry._1(clickFormBoard, item.id);
                                                    }),
                                                  onMouseEnter: (function (param) {
                                                      return Curry._1(mouseFormItem, i);
                                                    }),
                                                  onMouseLeave: (function (param) {
                                                      return Curry._1(mouseFormItem, -1);
                                                    })
                                                }, React.createElement(GridItem$BtsCore.make, {
                                                      top: "0",
                                                      right: "0",
                                                      bottom: "0",
                                                      left: "0",
                                                      cursor: "pointer",
                                                      enterBorderRadius: "10",
                                                      borderRadius: "10",
                                                      enterBackgroundColor: "rgba(0,0,0,0.1)",
                                                      xs: "auto",
                                                      children: React.createElement(GridContainer$BtsCore.make, {
                                                            backgroundColor: "none",
                                                            direction: "column",
                                                            justify: "center",
                                                            alignItem: "stretch",
                                                            children: null
                                                          }, React.createElement(GridItem$BtsCore.make, {
                                                                enterBackgroundColor: "none",
                                                                backgroundColor: "none",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      backgroundColor: "none",
                                                                      direction: "row",
                                                                      justify: "between",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          enterBackgroundColor: "none",
                                                                          backgroundColor: "none",
                                                                          xs: "no",
                                                                          children: React.createElement(Typography$BtsCore.make, {
                                                                                variant: "tile",
                                                                                fontWeight: "600",
                                                                                children: item.tile
                                                                              })
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          enterBackgroundColor: "none",
                                                                          backgroundColor: "none",
                                                                          xs: "no",
                                                                          children: item.enter ? React.createElement(IconButton$BtsCore.make, {
                                                                                  padding: "6",
                                                                                  children: null
                                                                                }, React.createElement(Tooltip$BtsCore.make, {
                                                                                      location: "right",
                                                                                      backgroundColor: "rgba(255,0,0,0.8)",
                                                                                      children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                            id: "more",
                                                                                            defaultMessage: "More"
                                                                                          })
                                                                                    }), React.createElement(IconAction$BtsCore.make, {
                                                                                      animation: "leftRight",
                                                                                      src: Icons$BtsCore.moreVertBlack
                                                                                    })) : React.createElement("div", {
                                                                                  style: {
                                                                                    height: "36px",
                                                                                    width: "36px"
                                                                                  }
                                                                                })
                                                                        }))
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                enterBackgroundColor: "none",
                                                                backgroundColor: "none",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      backgroundColor: "none",
                                                                      direction: "row",
                                                                      justify: "between",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          enterBackgroundColor: "none",
                                                                          backgroundColor: "none",
                                                                          xs: "no",
                                                                          children: React.createElement(Typography$BtsCore.make, {
                                                                                variant: "subheading",
                                                                                color: "#606060",
                                                                                children: item.distance
                                                                              })
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          enterBackgroundColor: "none",
                                                                          backgroundColor: "none",
                                                                          xs: "no",
                                                                          children: React.createElement(Typography$BtsCore.make, {
                                                                                variant: "subheading",
                                                                                color: "#606060",
                                                                                children: item.arrival
                                                                              })
                                                                        }))
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                enterBackgroundColor: "none",
                                                                backgroundColor: "none",
                                                                xs: "auto",
                                                                children: React.createElement(Typography$BtsCore.make, {
                                                                      variant: "subheading",
                                                                      children: item.desc
                                                                    })
                                                              }))
                                                    }), React.createElement(GridItem$BtsCore.make, {
                                                      enterBackgroundColor: "none",
                                                      backgroundColor: "none",
                                                      xs: "auto",
                                                      children: React.createElement(Divider$BtsCore.make, { })
                                                    }));
                                    }), state.items)
                            }), React.createElement(BottomScroll$BtsCore.make, {
                              showBar: state.showItem,
                              disabled: state.showProgress,
                              onClick: scrollBar
                            })),
                    null
                  ]
                }), React.createElement(DialogFull$BtsCore.make, {
                  showAnimation: state.showFull,
                  children: null
                }, React.createElement(DialogTitle$BtsCore.make, {
                      top: "18",
                      left: "64",
                      children: React.createElement(Typography$BtsCore.make, {
                            variant: "headline",
                            fontWeight: "600",
                            children: state.formTile
                          })
                    }), React.createElement(DialogContent$BtsCore.make, {
                      children: React.createElement(DialogContentText$BtsCore.make, {
                            children: React.createElement(GridItem$BtsCore.make, {
                                  style: Together$BtsCore.marginAuto,
                                  top: "0",
                                  right: "0",
                                  bottom: "0",
                                  left: "54",
                                  xs: "12",
                                  maxWidth: "770px",
                                  children: React.createElement(GridContainer$BtsCore.make, {
                                        direction: "column",
                                        justify: "center",
                                        alignItem: "stretch",
                                        children: null
                                      }, React.createElement(GridItem$BtsCore.make, {
                                            style: {
                                              position: "sticky",
                                              top: "0px",
                                              zIndex: "1000"
                                            },
                                            top: "0",
                                            right: "0",
                                            bottom: "6",
                                            left: "0",
                                            xs: "auto",
                                            children: React.createElement(Tabs$BtsCore.make, {
                                                  id: "default-",
                                                  index: state.index,
                                                  short: 20,
                                                  height: "3",
                                                  children: $$Array.of_list(List.mapi((function (i, tabitem) {
                                                              return React.createElement(Tab$BtsCore.make, {
                                                                          showTab: tabitem.showTab,
                                                                          maxWidth: "111.6",
                                                                          borderRadius: "15",
                                                                          id: "default-" + String(i),
                                                                          animationName: "none",
                                                                          onClick: (function (param) {
                                                                              return Curry._1(clickItemTab, i);
                                                                            }),
                                                                          children: React.createElement(IconAction$BtsCore.make, {
                                                                                width: "28",
                                                                                height: "28",
                                                                                animation: "leftRight",
                                                                                src: tabitem.tabImage
                                                                              })
                                                                        });
                                                            }), state.tabitems))
                                                })
                                          }), match$1 !== 0 ? (
                                          match$1 !== 1 ? null : React.createElement(GridItem$BtsCore.make, {
                                                  top: "0",
                                                  right: "0",
                                                  bottom: "0",
                                                  left: "0",
                                                  xs: "auto",
                                                  children: React.createElement(GridContainer$BtsCore.make, {
                                                        direction: "columnReverse",
                                                        justify: "center",
                                                        alignItem: "stretch",
                                                        children: $$Array.mapi((function (i, chatitem) {
                                                                var match = chatitem.showEnter;
                                                                var match$1 = chatitem.showDelete;
                                                                return React.createElement(React.Fragment, undefined, React.createElement("div", {
                                                                                onMouseEnter: (function (param) {
                                                                                    return Curry._1(mouseChatItem, i);
                                                                                  }),
                                                                                onMouseLeave: (function (param) {
                                                                                    return Curry._1(mouseChatItem, -1);
                                                                                  })
                                                                              }, React.createElement(GridItem$BtsCore.make, {
                                                                                    top: "6",
                                                                                    right: "0",
                                                                                    bottom: "6",
                                                                                    left: "0",
                                                                                    xs: "auto",
                                                                                    children: React.createElement(GridContainer$BtsCore.make, {
                                                                                          direction: "row",
                                                                                          justify: "start",
                                                                                          alignItem: "start",
                                                                                          children: null
                                                                                        }, React.createElement(GridItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              xs: "no",
                                                                                              children: React.createElement(Avatar$BtsCore.make, {
                                                                                                    top: "5",
                                                                                                    bottom: "5",
                                                                                                    backgroundColor: "rgba(255,0,0,0.8)",
                                                                                                    children: React.createElement(Typography$BtsCore.make, {
                                                                                                          variant: "tile",
                                                                                                          color: "rgba(255,255,255,1)",
                                                                                                          children: chatitem.fstName
                                                                                                        })
                                                                                                  })
                                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                                              top: "0",
                                                                                              right: "0",
                                                                                              bottom: "0",
                                                                                              left: "0",
                                                                                              xs: "auto",
                                                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                                                    direction: "column",
                                                                                                    justify: "center",
                                                                                                    alignItem: "stretch",
                                                                                                    children: null
                                                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                                                        top: "0",
                                                                                                        right: "0",
                                                                                                        bottom: "0",
                                                                                                        left: "0",
                                                                                                        xs: "auto",
                                                                                                        children: React.createElement(GridContainer$BtsCore.make, {
                                                                                                              direction: "row",
                                                                                                              justify: "start",
                                                                                                              alignItem: "center",
                                                                                                              children: null
                                                                                                            }, React.createElement(GridItem$BtsCore.make, {
                                                                                                                  top: "0",
                                                                                                                  right: "0",
                                                                                                                  bottom: "0",
                                                                                                                  left: "0",
                                                                                                                  xs: "no",
                                                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                                                        variant: "subheading",
                                                                                                                        fontWeight: "600",
                                                                                                                        children: chatitem.name
                                                                                                                      })
                                                                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                                                                  top: "0",
                                                                                                                  right: "0",
                                                                                                                  bottom: "0",
                                                                                                                  left: "6",
                                                                                                                  xs: "auto",
                                                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                                                        variant: "subtitle1",
                                                                                                                        color: "#606060",
                                                                                                                        children: chatitem.datetime
                                                                                                                      })
                                                                                                                }))
                                                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                                                        top: "0",
                                                                                                        right: "0",
                                                                                                        bottom: "0",
                                                                                                        left: "3",
                                                                                                        xs: "auto",
                                                                                                        children: React.createElement(Typography$BtsCore.make, {
                                                                                                              variant: "subheading",
                                                                                                              children: React.createElement("div", {
                                                                                                                    dangerouslySetInnerHTML: {
                                                                                                                      __html: chatitem.content
                                                                                                                    }
                                                                                                                  })
                                                                                                            })
                                                                                                      }))
                                                                                            }), match && match$1 ? React.createElement(GridItem$BtsCore.make, {
                                                                                                style: {
                                                                                                  position: "relative"
                                                                                                },
                                                                                                top: "0",
                                                                                                right: "0",
                                                                                                bottom: "0",
                                                                                                left: "0",
                                                                                                xs: "no",
                                                                                                children: React.createElement(IconButton$BtsCore.make, {
                                                                                                      style: {
                                                                                                        position: "absolute",
                                                                                                        right: "6px",
                                                                                                        top: "-6px"
                                                                                                      },
                                                                                                      padding: "6",
                                                                                                      disabled: state.showProgress,
                                                                                                      children: null
                                                                                                    }, React.createElement(Tooltip$BtsCore.make, {
                                                                                                          location: "left",
                                                                                                          backgroundColor: "rgba(255,0,0,0.8)",
                                                                                                          children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                                                id: "deleted",
                                                                                                                defaultMessage: "Deleted"
                                                                                                              })
                                                                                                        }), React.createElement(IconAction$BtsCore.make, {
                                                                                                          animation: "circle",
                                                                                                          src: Icons$BtsCore.clearBlack
                                                                                                        }))
                                                                                              }) : null)
                                                                                  })), React.createElement(GridItem$BtsCore.make, {
                                                                                right: "24",
                                                                                left: "24",
                                                                                xs: "auto",
                                                                                children: React.createElement(Divider$BtsCore.make, { })
                                                                              }));
                                                              }), state.chatitems)
                                                      })
                                                })
                                        ) : $$Array.map((function (formitem) {
                                                return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                top: "6",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(Typography$BtsCore.make, {
                                                                      variant: "subheading",
                                                                      color: "#606060",
                                                                      children: formitem.type_
                                                                    })
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "6",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      direction: "row",
                                                                      justify: "center",
                                                                      alignItem: "center",
                                                                      children: null
                                                                    }, React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "auto",
                                                                          children: React.createElement(Typography$BtsCore.make, {
                                                                                variant: "subheading",
                                                                                color: "#606060",
                                                                                children: formitem.address
                                                                              })
                                                                        }), React.createElement(GridItem$BtsCore.make, {
                                                                          top: "0",
                                                                          right: "0",
                                                                          bottom: "0",
                                                                          left: "0",
                                                                          xs: "no",
                                                                          children: React.createElement(Button$BtsCore.make, {
                                                                                variant: "Link",
                                                                                href: "tel:" + formitem.phone,
                                                                                children: React.createElement(ReactIntl.FormattedMessage, {
                                                                                      id: "Default.contact",
                                                                                      defaultMessage: "Contact"
                                                                                    })
                                                                              })
                                                                        }))
                                                              }), React.createElement(GridItem$BtsCore.make, {
                                                                top: "0",
                                                                right: "0",
                                                                bottom: "0",
                                                                left: "0",
                                                                xs: "auto",
                                                                children: React.createElement(GridContainer$BtsCore.make, {
                                                                      direction: "columnReverse",
                                                                      justify: "center",
                                                                      alignItem: "stretch",
                                                                      children: $$Array.map((function (menuitem) {
                                                                              return React.createElement(React.Fragment, undefined, React.createElement(GridItem$BtsCore.make, {
                                                                                              top: "6",
                                                                                              right: "0",
                                                                                              bottom: "6",
                                                                                              left: "0",
                                                                                              xs: "auto",
                                                                                              children: React.createElement(GridContainer$BtsCore.make, {
                                                                                                    direction: "column",
                                                                                                    justify: "center",
                                                                                                    alignItem: "stretch",
                                                                                                    children: null
                                                                                                  }, React.createElement(GridItem$BtsCore.make, {
                                                                                                        top: "0",
                                                                                                        right: "0",
                                                                                                        left: "0",
                                                                                                        xs: "auto",
                                                                                                        children: React.createElement(GridContainer$BtsCore.make, {
                                                                                                              direction: "row",
                                                                                                              justify: "center",
                                                                                                              alignItem: "center",
                                                                                                              children: null
                                                                                                            }, React.createElement(GridItem$BtsCore.make, {
                                                                                                                  top: "0",
                                                                                                                  right: "0",
                                                                                                                  bottom: "0",
                                                                                                                  left: "0",
                                                                                                                  xs: "no",
                                                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                                                        variant: "subheading",
                                                                                                                        fontSize: "1.2rem",
                                                                                                                        fontWeight: "600",
                                                                                                                        children: menuitem.name
                                                                                                                      })
                                                                                                                }), React.createElement(GridItem$BtsCore.make, {
                                                                                                                  top: "0",
                                                                                                                  right: "0",
                                                                                                                  bottom: "0",
                                                                                                                  xs: "auto",
                                                                                                                  children: React.createElement(Typography$BtsCore.make, {
                                                                                                                        variant: "subheading",
                                                                                                                        color: "rgba(255,0,0,0.8)",
                                                                                                                        fontWeight: "600",
                                                                                                                        children: menuitem.price
                                                                                                                      })
                                                                                                                }))
                                                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                                                        top: "0",
                                                                                                        right: "0",
                                                                                                        left: "0",
                                                                                                        xs: "auto",
                                                                                                        children: React.createElement(Image$BtsCore.make, {
                                                                                                              width: "auto",
                                                                                                              height: "200px",
                                                                                                              borderRadius: "6",
                                                                                                              src: "data:image/jpg;base64," + menuitem.album
                                                                                                            })
                                                                                                      }), React.createElement(GridItem$BtsCore.make, {
                                                                                                        top: "0",
                                                                                                        right: "0",
                                                                                                        bottom: "0",
                                                                                                        left: "0",
                                                                                                        xs: "auto",
                                                                                                        children: React.createElement(Typography$BtsCore.make, {
                                                                                                              variant: "subheading",
                                                                                                              children: React.createElement("div", {
                                                                                                                    dangerouslySetInnerHTML: {
                                                                                                                      __html: menuitem.remark
                                                                                                                    }
                                                                                                                  })
                                                                                                            })
                                                                                                      }))
                                                                                            }), React.createElement(GridItem$BtsCore.make, {
                                                                                              xs: "auto",
                                                                                              children: React.createElement(Divider$BtsCore.make, { })
                                                                                            }));
                                                                            }), formitem.menuitems)
                                                                    })
                                                              }));
                                              }), state.formitems))
                                })
                          })
                    }), React.createElement(DialogActions$BtsCore.make, {
                      children: React.createElement("div", {
                            style: {
                              left: "10px",
                              position: "fixed",
                              top: "10px"
                            }
                          }, React.createElement(IconButton$BtsCore.make, {
                                padding: "12",
                                disabled: state.showProgress,
                                onClick: closeAnimationFull,
                                children: null
                              }, React.createElement(Tooltip$BtsCore.make, {
                                    location: "bottom",
                                    backgroundColor: "rgba(255,0,0,0.8)",
                                    children: React.createElement(ReactIntl.FormattedMessage, {
                                          id: "closed",
                                          defaultMessage: "Closed"
                                        })
                                  }), React.createElement(IconAction$BtsCore.make, {
                                    animation: "circle",
                                    src: Icons$BtsCore.clearBlack
                                  })))
                    })), React.createElement(SnackbarYoutube$BtsCore.make, {
                  showYoutube: state.showYoutube,
                  position: "bottomLeft",
                  children: /* tuple */[
                    React.createElement("span", undefined, state.youtubeText),
                    null
                  ]
                }));
}

var make = Home;

export {
  reducer ,
  initialState ,
  make ,
  
}
/*  Not a pure module */
